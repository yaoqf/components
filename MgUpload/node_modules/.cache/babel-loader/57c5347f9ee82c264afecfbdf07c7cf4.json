{"ast":null,"code":"import _toConsumableArray from \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/src/MgUpload.js\";\nimport React, { useState, forwardRef, useRef } from \"react\";\nimport \"./styles.css\";\nimport { uuids } from './utils/utils';\n\nfunction MgUpload(props, ref) {\n  var _this = this;\n\n  var _props$handleChange = props.handleChange,\n      handleChange = _props$handleChange === void 0 ? function () {} : _props$handleChange;\n\n  var _useState = useState(props.fileList || []),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var inputRef = useRef();\n\n  var onChange = function onChange(info) {\n    var fileList = [];\n    Object.entries(info.currentTarget.files).forEach(function (item) {\n      var _item = _slicedToArray(item, 2),\n          key = _item[0],\n          value = _item[1];\n\n      var file = {\n        uid: uuids(),\n        name: value.name,\n        size: value.size,\n        type: value.type,\n        lastModified: value.lastModified,\n        lastModifiedDate: value.lastModifiedDate,\n        originFileObj: item[1]\n      };\n      fileList.push(file);\n    });\n    setFiles([].concat(_toConsumableArray(files), fileList));\n    handleChange({\n      fileList: [].concat(_toConsumableArray(files), fileList)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    files: files,\n    onChange: onChange,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      inputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"\\u4E0A\\u4F20\"), files.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }\n    }, item.name);\n  }), files.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: item.url || window.URL.createObjectURL(item.originFileObj),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    });\n  })));\n}\n\nexport default forwardRef(MgUpload);","map":{"version":3,"sources":["/Users/yaoqingfeng/Downloads/work/通用组件/MgUpload/src/MgUpload.js"],"names":["React","useState","forwardRef","useRef","uuids","MgUpload","props","ref","handleChange","fileList","files","setFiles","inputRef","onChange","info","Object","entries","currentTarget","forEach","item","key","value","file","uid","name","size","type","lastModified","lastModifiedDate","originFileObj","push","display","current","click","map","url","window","URL","createObjectURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,GAAzB,EAA8B;AAAA;;AAAA,4BAGxBD,KAHwB,CAE1BE,YAF0B;AAAA,MAE1BA,YAF0B,oCAEX,YAAM,CAAG,CAFE;;AAAA,kBAIFP,QAAQ,CAACK,KAAK,CAACG,QAAN,IAAkB,EAAnB,CAJN;AAAA;AAAA,MAIrBC,KAJqB;AAAA,MAIdC,QAJc;;AAK5B,MAAMC,QAAQ,GAAGT,MAAM,EAAvB;;AAEA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,QAAML,QAAQ,GAAG,EAAjB;AACAM,IAAAA,MAAM,CAACC,OAAP,CAAeF,IAAI,CAACG,aAAL,CAAmBP,KAAlC,EAAyCQ,OAAzC,CAAiD,UAAAC,IAAI,EAAI;AAAA,iCAClCA,IADkC;AAAA,UAChDC,GADgD;AAAA,UAC3CC,KAD2C;;AAEvD,UAAMC,IAAI,GAAG;AACXC,QAAAA,GAAG,EAAEnB,KAAK,EADC;AAEXoB,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAFD;AAGXC,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAHD;AAIXC,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAJD;AAKXC,QAAAA,YAAY,EAAEN,KAAK,CAACM,YALT;AAMXC,QAAAA,gBAAgB,EAAEP,KAAK,CAACO,gBANb;AAOXC,QAAAA,aAAa,EAAEV,IAAI,CAAC,CAAD;AAPR,OAAb;AASAV,MAAAA,QAAQ,CAACqB,IAAT,CAAcR,IAAd;AACD,KAZD;AAaAX,IAAAA,QAAQ,8BAAKD,KAAL,GAAeD,QAAf,EAAR;AACAD,IAAAA,YAAY,CAAC;AAAEC,MAAAA,QAAQ,+BAAMC,KAAN,GAAgBD,QAAhB;AAAV,KAAD,CAAZ;AACD,GAjBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEG,QADP;AAEE,IAAA,KAAK,EAAE;AAAEmB,MAAAA,OAAO,EAAE;AAAX,KAFT;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAErB,KAJT;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAME,IAAA,QAAQ,EAAE,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAED,MAAAA,QAAQ,CAACoB,OAAT,CAAiBC,KAAjB;AAA0B,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,EAaGvB,KAAK,CAACwB,GAAN,CAAU,UAAAf,IAAI;AAAA,wBAAI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAChBJ,IAAI,CAACK,IADW,CAAJ;AAAA,GAAd,CAbH,EAiBId,KAAK,CAACwB,GAAN,CAAU,UAAAf,IAAI;AAAA,wBAAI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACgB,GAAL,IAAYC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BnB,IAAI,CAACU,aAAhC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAd,CAjBJ,CADF,CADF;AAwBD;;AAED,eAAe3B,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React, { useState, forwardRef, useRef } from \"react\";\nimport \"./styles.css\";\nimport { uuids } from './utils/utils'\n\n\nfunction MgUpload(props, ref) {\n  const {\n    handleChange = () => { }\n  } = props\n  const [files, setFiles] = useState(props.fileList || []);\n  const inputRef = useRef();\n\n  const onChange = (info) => {\n    const fileList = [];\n    Object.entries(info.currentTarget.files).forEach(item => {\n      const [key, value] = item;\n      const file = {\n        uid: uuids(),\n        name: value.name,\n        size: value.size,\n        type: value.type,\n        lastModified: value.lastModified,\n        lastModifiedDate: value.lastModifiedDate,\n        originFileObj: item[1]\n      };\n      fileList.push(file);\n    });\n    setFiles([...files, ...fileList])\n    handleChange({ fileList: [...files, ...fileList] });\n  };\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          ref={inputRef}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          files={files}\n          onChange={onChange}\n          multiple={true}\n        />\n        <button onClick={() => { inputRef.current.click() }}\n        >\n          上传\n        </button>\n        {files.map(item => <div key={item.uid}>\n          {item.name}\n        </div>)}\n        {\n          files.map(item => <img src={item.url || window.URL.createObjectURL(item.originFileObj)}></img>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default forwardRef(MgUpload);\n"]},"metadata":{},"sourceType":"module"}