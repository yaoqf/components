{"ast":null,"code":"import _toConsumableArray from \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/src/MgUpload.js\";\nimport React, { useState, forwardRef, useRef } from \"react\";\nimport \"./styles.css\";\nimport { uuids } from './utils/utils';\nimport upload from \"./public/svg/upload.svg\";\n\nfunction MgUpload(props, ref) {\n  var _this = this;\n\n  var fileList = props.fileList,\n      _props$handleChange = props.handleChange,\n      handleChange = _props$handleChange === void 0 ? function () {} : _props$handleChange;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var inputRef = useRef();\n\n  var onChange = function onChange(info) {\n    var fileLists = [];\n    Object.entries(info.currentTarget.files).forEach(function (item) {\n      var _item = _slicedToArray(item, 2),\n          key = _item[0],\n          value = _item[1];\n\n      var file = {\n        uid: uuids(),\n        name: value.name,\n        size: value.size,\n        type: value.type,\n        lastModified: value.lastModified,\n        lastModifiedDate: value.lastModifiedDate,\n        originFileObj: item[1]\n      };\n      fileLists.push(file);\n    });\n    setFiles([].concat(_toConsumableArray(files), fileLists));\n    handleChange({\n      fileList: fileLists\n    });\n  };\n\n  var newFileList = fileList || files;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    files: newFileList,\n    onChange: onChange,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      inputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      background: \"url(\".concat(upload, \")\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), \"\\u4E0A\\u4F20\")), newFileList.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }\n    }, item.name);\n  }), newFileList.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: item.url || window.URL.createObjectURL(item.originFileObj),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }\n    });\n  })));\n}\n\nexport default forwardRef(MgUpload);","map":{"version":3,"sources":["/Users/yaoqingfeng/Downloads/work/通用组件/MgUpload/src/MgUpload.js"],"names":["React","useState","forwardRef","useRef","uuids","MgUpload","props","ref","fileList","handleChange","files","setFiles","inputRef","onChange","info","fileLists","Object","entries","currentTarget","forEach","item","key","value","file","uid","name","size","type","lastModified","lastModifiedDate","originFileObj","push","newFileList","display","current","click","background","upload","map","url","window","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useRef } from \"react\";\nimport \"./styles.css\";\nimport { uuids } from './utils/utils'\nimport upload from './public/svg/upload.svg';\n\n\nfunction MgUpload(props, ref) {\n  const {\n    fileList,\n    handleChange = () => { },\n  } = props\n  const [files, setFiles] = useState([]);\n  const inputRef = useRef();\n\n  const onChange = (info) => {\n    const fileLists = [];\n    Object.entries(info.currentTarget.files).forEach(item => {\n      const [key, value] = item;\n      const file = {\n        uid: uuids(),\n        name: value.name,\n        size: value.size,\n        type: value.type,\n        lastModified: value.lastModified,\n        lastModifiedDate: value.lastModifiedDate,\n        originFileObj: item[1]\n      };\n      fileLists.push(file);\n    });\n    setFiles([...files, ...fileLists])\n    handleChange({ fileList: fileLists });\n  };\n\n  const newFileList = fileList || files;\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          ref={inputRef}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          files={newFileList}\n          onChange={onChange}\n          multiple={true}\n        />\n        <button onClick={() => { inputRef.current.click() }}\n        >\n          <span>\n            <span style={{background:`url(${upload})`}}></span>上传\n          </span>\n        </button>\n        {newFileList.map(item => <div key={item.uid}>\n          {item.name}\n        </div>)}\n        {\n          newFileList.map(item => <img src={item.url || window.URL.createObjectURL(item.originFileObj)}></img>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default forwardRef(MgUpload);\n"]},"metadata":{},"sourceType":"module"}