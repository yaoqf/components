{"ast":null,"code":"import _slicedToArray from \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yaoqingfeng/Downloads/work/\\u901A\\u7528\\u7EC4\\u4EF6/MgUpload/src/MgUpload.js\";\nimport React, { useState, forwardRef, useRef } from \"react\";\nimport \"./styles.css\";\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nfunction MgUpload(props, ref) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileList = _useState2[0],\n      setFileList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jsFileList = _useState4[0],\n      setJsFileList = _useState4[1];\n\n  var inputRef = useRef();\n  var uploadProps = {\n    onChange: function onChange(info) {\n      console.log(info.file);\n      console.log(info.fileList);\n      setFileList(info.fileList);\n    },\n    beforeUpload: function beforeUpload() {\n      return false;\n    },\n    multiple: true,\n    fileList: fileList\n  };\n\n  var handleChange = function handleChange(info) {\n    console.log(info);\n    console.log(info.currentTarget.files);\n    var fileList = [];\n    Object.entries(info.currentTarget.files).forEach(function (item) {\n      var _item = _slicedToArray(item, 2),\n          key = _item[0],\n          value = _item[1];\n\n      var file = {\n        name: value.name,\n        size: value.size,\n        type: value.type,\n        lastModified: value.lastModified,\n        lastModifiedDate: value.lastModifiedDate,\n        originFileObj: item[1]\n      };\n      fileList.push(file);\n    });\n    console.log(fileList);\n    setJsFileList(fileList);\n  };\n\n  console.log(jsFileList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Upload, Object.assign({}, uploadProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), \" Click to Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    files: jsFileList,\n    onChange: handleChange,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      inputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"\\u4E0A\\u4F20\"), jsFileList.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, item.name);\n  })));\n}\n\nexport default forwardRef(MgUpload);","map":{"version":3,"sources":["/Users/yaoqingfeng/Downloads/work/通用组件/MgUpload/src/MgUpload.js"],"names":["React","useState","forwardRef","useRef","Upload","Button","UploadOutlined","MgUpload","props","ref","fileList","setFileList","jsFileList","setJsFileList","inputRef","uploadProps","onChange","info","console","log","file","beforeUpload","multiple","handleChange","currentTarget","files","Object","entries","forEach","item","key","value","name","size","type","lastModified","lastModifiedDate","originFileObj","push","display","current","click","map"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useRef } from \"react\";\nimport \"./styles.css\";\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nfunction MgUpload(props, ref) {\n  const [fileList, setFileList] = useState([]);\n  const [jsFileList, setJsFileList] = useState([]);\n  const inputRef = useRef();\n  const uploadProps = {\n    onChange: (info) => {\n      console.log(info.file);\n      console.log(info.fileList);\n      setFileList(info.fileList);\n    },\n    beforeUpload: () => false,\n    multiple: true,\n    fileList: fileList\n  };\n\n  const handleChange = (info) => {\n    console.log(info);\n    console.log(info.currentTarget.files);\n    const fileList = [];\n    Object.entries(info.currentTarget.files).forEach((item) => {\n      const [key, value] = item;\n      const file = {\n        name: value.name,\n        size: value.size,\n        type: value.type,\n        lastModified: value.lastModified,\n        lastModifiedDate: value.lastModifiedDate,\n        originFileObj: item[1]\n      };\n      fileList.push(file);\n    });\n    console.log(fileList);\n\n    setJsFileList(fileList);\n  };\n  console.log(jsFileList)\n  return (\n    <div className=\"App\">\n      <Upload {...uploadProps}>\n        <Button>\n          <UploadOutlined /> Click to Upload\n        </Button>\n      </Upload>\n      <div>\n        <input\n          ref={inputRef}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          files={jsFileList}\n          onChange={handleChange}\n          multiple={true}\n        />\n        <Button\n          onClick={() => {\n            inputRef.current.click();\n          }}\n        >\n          上传\n        </Button>\n        {jsFileList.map(item => <span>\n          {item.name}\n        </span>)}\n      </div>\n    </div>\n  );\n}\n\nexport default forwardRef(MgUpload);\n"]},"metadata":{},"sourceType":"module"}